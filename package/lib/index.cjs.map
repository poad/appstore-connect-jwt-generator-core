{"version":3,"sources":["../src/cjs/index.cts"],"names":["token","tokenSync","signOption","issuerId","privateKeyId","duration","algorithm","keyid","audience","expiresIn","issuer","jwtGenCore","privateKey","jwt","sign","Promise","resolve","module","exports"],"mappings":"mPAuCA,iBAAA,cAhBsBA,eAAAA,WAPNC,mBAAAA,+EAhBA,qGAEhB,MAAMC,WAAa,CACjBC,SACAC,aACAC,WACqB,CAAA,CACrBC,UAAW,QACXC,MAAOH,aACPI,SAAU,qBACVC,UAAWJ,SACXK,OAAQP,QACV,CAAA,EAEA,SAASQ,aAAe,CAEjB,SAASV,UACdW,UAA2B,CAC3BT,QAAgB,CAChBC,YAAoB,CACpBC,SAAmB,GAAG,EACZ,OAAOQ,qBAAG,CAACC,IAAI,kBAAKF,WAAYV,WAAWC,SAAUC,aAAcC,UAAY,CAEpF,eAAeL,MACpBY,UAA2B,CAC3BT,QAAgB,CAChBC,YAAoB,CACpBC,SAAmB,GAAG,EAEtB,OAAOU,QAAQC,OAAO,CACpBH,qBAAG,CAACC,IAAI,kBAAKF,WAAYV,WAAWC,SAAUC,aAAcC,WAEhE,CAEAM,WAAWV,SAAS,CAAGA,SACvBU,CAAAA,WAAWX,KAAK,CAAGA,KAEnBiB,CAAAA,OAAOC,OAAO,CAAGA,QAAUP,iBAE3B,SAAeA","file":"index.cjs","sourcesContent":["import jwt from 'jsonwebtoken';\n\nconst signOption = (\n  issuerId: string,\n  privateKeyId: string,\n  duration: number,\n): jwt.SignOptions => ({\n  algorithm: 'ES256',\n  keyid: privateKeyId,\n  audience: 'appstoreconnect-v1',\n  expiresIn: duration,\n  issuer: issuerId,\n});\n\nfunction jwtGenCore() { }\n\nexport function tokenSync(\n  privateKey: string | Buffer,\n  issuerId: string,\n  privateKeyId: string,\n  duration: number = 500,\n): string { return jwt.sign({}, privateKey, signOption(issuerId, privateKeyId, duration)); };\n\nexport async function token(\n  privateKey: string | Buffer,\n  issuerId: string,\n  privateKeyId: string,\n  duration: number = 500,\n): Promise<string> {\n  return Promise.resolve(\n    jwt.sign({}, privateKey, signOption(issuerId, privateKeyId, duration))\n  );\n};\n\njwtGenCore.tokenSync = tokenSync;\njwtGenCore.token = token;\n\nmodule.exports = exports = jwtGenCore;\n\nexport default jwtGenCore;\n"]}